name: Build and deploy to AWS

on:
  push:
    branches:
      - master

jobs:
  github-pages:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - name: Configure credentials from AWS account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Apply site changes
        run: |
          sudo gem install jekyll jekyll-timeago rouge
          jekyll build -d public
          cd public && zip -r ../frontend-artifact.zip . && cd ..
          aws s3 cp frontend-artifact.zip s3://dlab.am-codepipeline/

      #- name: Apply infrastructure changes
      #  run: |
      #    cd infrastructure/terraform
      #    terraform init -backend-config=backend.hcl
      #    terraform apply -auto-approve

      - name: Build lambdas image
        run: |
          cd infrastructure/lambdas/

          aws ecr get-login-password | \
            docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambdas-common:latest .
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/lambdas-common:latest

          #for lambda in $(cat ../environments/qa/web-module/lambdas.tf | grep function_name | grep local | grep -v \# | grep -o '[^-]\+$' | tr -d /'"'//);
          #do
          #  aws lambda update-function-code --function-name "qa-$lambda" \
          #    --image-uri ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/qa/lambdas-common:latest
          #done
